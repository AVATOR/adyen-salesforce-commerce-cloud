/**
* Send request to adyen to get payment methods based on country code
* A signature is calculated based on the configured HMAC code
*

* @input Basket : dw.order.Basket
* @output PaymentMethods : Object
*/
importPackage( dw.crypto );
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.net );
importPackage( dw.util );

function execute( args : PipelineDictionary ) : Number
{
	var skinCode : String = Site.getCurrent().getCustomPreferenceValue("Adyen_skinCode"); 
	var merchantAccount : String = Site.getCurrent().getCustomPreferenceValue("Adyen_merchantCode");
	var HMACkey : String = Site.getCurrent().getCustomPreferenceValue("Adyen_HMACkey"); 
	var Mode : String = Site.getCurrent().getCustomPreferenceValue("Adyen_Mode");
	var allowedMethods : String = Site.getCurrent().getCustomPreferenceValue("Adyen_allowedMethods");
	
	if(merchantAccount == null){
		Logger.getLogger("Adyen").fatal("MERCHANTACCOUNT not set.");  
		return PIPELET_ERROR;
	}
	if(skinCode == null){
		Logger.getLogger("Adyen").fatal("skinCode not set.");  
		return PIPELET_ERROR;
	}
	if(HMACkey == null){
		Logger.getLogger("Adyen").fatal("HMACkey not set.");  
		return PIPELET_ERROR;
	}
	if (allowedMethods == "null" || allowedMethods == null) {
		args.allowedMethods = "";
	}
	
	var currencyCode : String	 		= args.Basket.currencyCode; 
	var merchantReference : String 	    = "Request payment methods";
	var sessionValidity : String 		= "2019-04-06T18:10:29+02:00";
	var paymentAmount : Number			= 100;
	var countryCode : String			= request.geolocation.countryCode;	
	var url : String					= "https://test.adyen.com/hpp/directory.shtml";

	if (Mode == "LIVE") {
		url = "https://live.adyen.com/hpp/directory.shtml";
	}
	
	var adyenRequest : SortedMap = new SortedMap();
	adyenRequest.put("paymentAmount", paymentAmount );
	adyenRequest.put("currencyCode", currencyCode );
	adyenRequest.put("merchantReference", merchantReference );
	adyenRequest.put("skinCode", skinCode );
	adyenRequest.put("merchantAccount", merchantAccount );
	adyenRequest.put("sessionValidity", sessionValidity );
	adyenRequest.put("countryCode", countryCode );
	adyenRequest.put("allowedMethods", allowedMethods );
	
	var keys : String = "";
	var values : String = "";
	var reqBody : String = "";
	for(var key in adyenRequest) {
	    keys = keys.concat(key + ":");
	    var value = adyenRequest[key];

	    reqBody = reqBody.concat(key + "=" + encodeURIComponent(value.toString()) + "&");

	    // escape chars
	    value = value.toString().replace(/\\/g, "\\\\").replace(/\:/g, "\\:");
	    values = values.concat(value + ":");
	}
	
	values = values.substring(0, values.length - 1);
	var requestString : String = keys.concat(values);
	
	var keyBytes : Bytes = Encoding.fromHex(HMACkey);
	var c : Mac = Mac(Mac.HMAC_SHA_256);  
	var merchantSig : String = Encoding.toBase64(c.digest(requestString, keyBytes));
	
	reqBody = reqBody.concat("merchantSig=" + encodeURIComponent(merchantSig));
	
	var httpSvc : HTTPClient = new HTTPClient();
	var timeout : Number = dw.system.Site.getCurrent().getCustomPreferenceValue("HttpTimeout");
	
	httpSvc.setTimeout(timeout);
	httpSvc.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
	httpSvc.open('POST', url);
	httpSvc.send(reqBody);
	
	args.PaymentMethods = JSON.parse(httpSvc.text);
	
	return PIPELET_NEXT;
}
