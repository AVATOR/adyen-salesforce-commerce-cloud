/**
* Build the openinvoice response needed for the Afterpay payment method (see Adyen Manual for details)
*
*/
importPackage( dw.system );
importPackage( dw.order );

function execute( args : PipelineDictionary ) : Number
{
	args.openInvoiceResponse = "";
	var count=0;

	var valutaCode = args.order.getCurrencyCode();
	var TotalAmount:number = 0;
	
	for each(var line in args.order.allProductLineItems) {
		if (count != 0) {
			args.openInvoiceResponse += "&";
		}
		var quantity:number=line.quantity.value;
		var SalesPrice = line.adjustedNetPrice;
		var SalesPriceAmount:number = Math.round(SalesPrice * 100);
		var OneSalesPrice:number = Math.round(SalesPriceAmount/quantity);

		var TaxPrice = line.adjustedTax;
		var TaxPriceAmount:number = Math.round(TaxPrice * 100);
		var OneTaxPrice:number = Math.round(TaxPriceAmount/quantity);

		args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".itemPrice="+(OneSalesPrice).toString()+"&";
		args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".itemVAT="+(OneTaxPrice).toString()+"&";
		args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".currency="+valutaCode+"&";
		args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".numberOfItems="+quantity.toString()+"&";
		args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".description="+encodeURIComponent(line.lineItemText)+"&";
		args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".vatCategory=High&";
		args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".lineReference="+(count+1);
		
		TotalAmount += OneSalesPrice*quantity;
		TotalAmount += OneTaxPrice*quantity;
		count++;
	}

	for each(var line in args.order.priceAdjustments) {
		if (count != 0) {
			args.openInvoiceResponse += "&";
		}
		var SalesPrice = line.netPrice;
		var SalesPriceAmount:number = Math.round(SalesPrice * 100);

		var TaxPrice = line.tax;
		var TaxPriceAmount:number = Math.round(TaxPrice * 100);

		args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".itemPrice="+(SalesPriceAmount).toString()+"&";
		args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".itemVAT="+(TaxPriceAmount).toString()+"&";
		args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".currency="+valutaCode+"&";
		args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".numberOfItems=1&";
		args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".description="+encodeURIComponent(line.lineItemText)+"&";
		args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".vatCategory=High&";
		args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".lineReference="+(count+1);
		
		TotalAmount += SalesPriceAmount;
		TotalAmount += TaxPriceAmount;
		count++;
	}
	
		var SalesPrice = args.order.shippingTotalNetPrice;
		if (SalesPrice > 0)
		{
			for each(var line in args.order.shipments) {
				if (count != 0) {
					args.openInvoiceResponse += "&";
				}
				var SalesPrice = line.adjustedShippingTotalNetPrice;
				var SalesPriceAmount:number = Math.round(SalesPrice  * 100);
				var TaxPrice = line.adjustedShippingTotalTax;
				var TaxPriceAmount:number = Math.round(TaxPrice * 100);
	
				args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".itemPrice="+(SalesPriceAmount).toString()+"&";
				args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".itemVAT="+TaxPriceAmount.toString()+"&";
				args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".currency="+valutaCode+"&";
				args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".numberOfItems=1&";
				args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".description=Shipping&";
				args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".vatCategory=High&";
				args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".lineReference="+(count+1);
				
				TotalAmount += SalesPriceAmount;
				TotalAmount += TaxPriceAmount;
				count++;
			}
		}
		
		var TotalOrderAmount:number = Math.round(args.order.totalGrossPrice * 100);
		if (TotalAmount != TotalOrderAmount) 
		{	
			if (count != 0) {
				args.openInvoiceResponse += "&";
			}
			args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".itemPrice="+Math.round(TotalOrderAmount-TotalAmount).toString()+"&";
			args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".itemVAT=0&";
			args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".currency="+valutaCode+"&";
			args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".numberOfItems=1&";
			args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".description=AfrondCorrectie&";
			args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".vatCategory=None&";
			args.openInvoiceResponse += "openInvoiceDetailResult.lines."+count+".lineReference="+(count+1);
		}
		
		Logger.getLogger("Adyen").debug("OpenInvoice Response  : " +args.openInvoiceResponse);
	
    return PIPELET_NEXT;
}
